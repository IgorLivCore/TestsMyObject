package myobject;

import Base.MOTestBase;
import Base.MOWebdriver;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import static org.testng.Assert.assertEquals;
import static org.testng.Assert.assertNotEquals;
import static org.testng.Assert.fail;
import static Base.MOWebdriver.*;

/**
 * Created by natalia on 20.02.15.
 */
public class ExplosiveLoss extends MOTestBase {
    @BeforeClass
    private void isDataPresent() throws Exception{
        if (isListEmpty(new String[] {"Объекты","ТУ","Персонал"}))
            fail("Не хватает данных для проведения теста!");
    }

    @BeforeMethod
    private void goToList() throws Exception{
        goTo("Инциденты","Утрата ВМ");
    }


    @Test(priority=1, groups = { "add" })
    public void testAdd() throws Exception
    {
        operation="добавление";
        add();

        legend="Вид утраты ВМ";
        select("Вид", 2);

        /*legend="Наличие пострадавших";
        switcher("Есть пострадавшие?", "Да");
        input("Из них погибших", "7");*/

        legend="Сведения об утрате ВМ";
        date("Дата утраты ВМ", "01.01.2015");
        input("Время утраты ВМ (МСК)", "1000");
        //date("Дата выяления случая утраты ВМ", "02.01.2015");
        //input("Лицо, обнаружившее утрату ВМ (ФИО, должность)", "ТестСозданиеУВМОбнаруживший");
        input("Наименование ВМ","ТестСозданиеУВМНаименованиеВМ");
        input("Количество ВМ","10");

        //input("Хозяйственное образование", "ТестСозданиеУВМХозОбразование");
        //select("Территориальный орган Ростехнадзора", 5);
        select("Вид надзора", 3);
        //select("Структурное подразделение",0);

        legend="Место утраты ВМ";
        input("Производство, участок, цех", data = "ТестСозданиеУВМПроизводствоУчастокЦех" + curDate());
        //input("Координаты по трассе с привязкой к нас. пункту","ТестСозданиеАварииКоординатыПоТрассе");
        input("Обстоятельства утраты ВМ","ТестСозданиеУВМОбстоятельстаУтраты");
        switcher("Вовремя ли подана информация об утрате ВМ (в течение 24-х часов)?", "Нет");
        input("Причина задержки", "ТестСозданиеУВМПричинаЗадержки");

        legend="План ликвидации утраты ВМ";
        select("Ответственный", 3);
        date("Рекомендуемая дата завершения плана","15.02.2016");

        legend="Объекты, на которых произошла утрата ВМ";
        select("Объект", 0);
        //select("Техническое устройство",0);

        legend="Ликвидирующие организации";
        button("Добавить");
        input("Наименование организации","ТестСозданиеУВМЛиквидирующаяОрганизация");

        legend="Кто сообщил об утрате ВМ";
        select("Сотрудник",0);

        /*legend="Данные лица, принявшего сообщение об утрате ВМ";
        input("Ф.И.О.", "ТестСозданиеУВМФИО");
        input("Должность","ТестСозданиеУВМДолжность");
        date("Дата", "01.01.2015");
        input("Время (МСК)", "1100");*/

        save();
        messageResultOfOperation("УВМ");

        legend="";
        button("Перейти на страницу утраты ВМ");

        goTo("Инциденты","Утрата ВМ");
        selectRow(0);
        assertEquals(revisionValue("Место утраты ВМ"), data,"Утрата ВМ не добавлена");
    }

    @Test(priority=2)
    public void testAddInvestigation() throws Exception
    {
        operation="добавление";
        selectRow(0);//выбрать первый элемент
        edit();
        goTo("Техническое расследование причин");

        legend="Сведения о техническом расследовании причин утраты ВМ";
        select("Описание режима работы объекта (оборудования) до утраты ВМ", 2);
        switcher("Были ли раньше аналогичные утраты ВМ на этом объекте", "Да");
        input("Какие аналогичные утраты ВМ были на данном объекте", "ТестСозданиеРасследованияУтратыВМАналогчныеАварии");
        input("Соблюдение лицензионных требований", "ТестСозданиеРасследованияУтратыВМСоблЛицТребований");
        input("Соблюдение замечаний и рекомендаций заключения экспертизы (при наличии)", "ТестСозданиеРасследованияУтратыВМСоблЗамечаний");
        input("Соблюдение положения декларации промышленной безопасности (при наличии)","ТестСозданиеРасследованияУтратыВМСоблПоложения");
        input("Краткая характеристика объекта и места, где произошла утрата ВМ", data = "ТестСозданиеРасследованияУтратыВМХарактеристикаОбъектаИМеста" + curDate());
        input("Наименование ВМ, которые были похищены, разбросаны или потеряны","ТестСозданиеРасследованияУтратыВМНаименованиеВМ");
        input("Количество ВМ, которые были похищены, разбросаны или потеряны","150000");
        input("Вид маркировки изделий","ТестСозданиеРасследованияУтратыВМВидМаркировки");
        input("Наименование возвращенных ВМ при расследовании","ТестСозданиеРасследованияУтратыВМНаименованиеВозвращенныхВМ");
        input("Количество возвращенных ВМ при расследовании","100000");

        legend="Обстоятельства утраты ВМ";
        input("Обстоятельства утраты ВМ, сценарий развития","ТестСозданиеРасследованияУтратыВМОбстоятельства");
        input("Факторы, приведшие к  утрате ВМ","ТестСозданиеРасследованияУтратыВМФакторы");
        input("Предпосылки утраты ВМ в сложившейся производственной обстановке","ТестСозданиеРасследованияУтратыПредпосылки");

        legend="Причины утраты ВМ";
        input("Технические причины утраты ВМ", "ТестСозданиеРасследованияУтратыВМТехПричины");
        input("Организационные причины утраты ВМ","ТестСозданиеРасследованияУтратыВМОргПричины");

        legend="Последствия утраты ВМ";
        input("Описание последствий", "ТестСозданиеРасследованияУтратыВМПоврежденияТУ");

        legend="Ущерб от утраты ВМ";
        input("Расходы на ликвидацию последствий утраты ВМ","45000");
        input("Прямые потери","60000");
        input("Экологический ущерб", "20000");
        input("Потери от выбытия трудовых ресурсов", "100000");
        input("Длительность простоя","85");
        select("Единица измерения", "Часы");
        date("Дата акта", "21.05.2015");
        input("Номер акта", "ТестСозданиеРасследованияУтратыВМНомерАкта");
        input("Номер приказа по расследованию", "ТестСозданиеРасследованияУтратыВМНомерПриказа");
        date("Дата приказа по расследованию", "21.05.2015");
        input("Выводы комиссии по раследованию причин утраты ВМ", "ТестСозданиеРасследованияУтратыВМВыводы");
        date("C:", "20.05.2015");
        date("По:", "20.09.2015");
        input("Обстоятельства, препятствующие проведению расследования в установленные сроки", "ТестСозданиеРасследованияУтратыВМОбстоятельстваПрепятствующиеРасследованию");
        input("Выявленные при расследовании недостатки в организации хранения, перевозки, использования и учета ВМ, не относящиеся к прямым причинам утраты","ТестСозданиеРасследованияУтратыВМНедоставткиВОрганизаци");
        input("Принятые меры наказания","ТестСозданиеРасследованияУтратыВМПринятыеМеры");
        switcher("Направлялся ли материал в следственные органы?", "Да");
        date("Дата направления материалов", "20.06.2015");
        input("Результаты  рассмотрения материалов в прокуратуре, правоохранительных   органах","ТестСозданиеРасследованияУтратыВМРезультатыРассмотрения");

        legend="Состав комиссии тех. расследования причин утраты ВМ";
        label("Сотрудник");
        select("Сотрудник", 5);
        select("Тип", "Председатель");

        legend="Нормативные документы, требования которых были нарушены";
        button("Добавить");
        select("Нормативный документ", 2);
        input("Номер статьи документа", "64");
        input("Текст статьи документа", "ТестСозданиеРасследованияУтратыВМТекстСтатьи");

        save();
        messageResultOfOperation("раследование, комиссия утраты ВМ");

        legend="";
        button("Перейти на страницу утраты ВМ");

        goTo("Инциденты","Утрата ВМ");
        selectRow(0);
        goTo("Данные о расследовании причин утраты ВМ");//открываем список
        assertEquals(revisionValue("Краткая характеристика объекта и места, где произошла утрата ВМ"), data, "Расследование, комиссия утраты ВМ не добавлены");
    }

    @Test(priority=200, groups = { "edit" })
    public void testEdit() throws Exception
    {
        operation="изменение";
        selectRow(0);
        edit();

        legend="Вид утраты ВМ";
        select("Вид", 2);

        legend="Наличие пострадавших";
        switcher("Есть пострадавшие?", "Да");
        input("Из них погибших", "7");

        legend="Сведения об утрате ВМ";
        date("Дата утраты ВМ", "01.01.2015");
        input("Время утраты ВМ (МСК)", "1000");
        date("Дата выяления случая утраты ВМ", "02.01.2015");
        input("Лицо, обнаружившее утрату ВМ (ФИО, должность)", "ТестСозданиеУВМОбнаруживший");
        input("Наименование ВМ","ТестСозданиеУВМНаименованиеВМ");
        input("Количество ВМ", "10");

        input("Хозяйственное образование", "ТестСозданиеУВМХозОбразование");
        select("Территориальный орган Ростехнадзора", 5);
        select("Вид надзора", 3);
        select("Структурное подразделение", "Плавильный цех");

        legend="Место утраты ВМ";
        input("Производство, участок, цех", data = "ТестСозданиеУВМПроизводствоУчастокЦех" + curDate());
        input("Координаты по трассе с привязкой к нас. пункту","ТестСозданиеАварииКоординатыПоТрассе");
        input("Обстоятельства утраты ВМ", "ТестСозданиеУВМОбстоятельстаУтраты");
        switcher("Вовремя ли подана информация об утрате ВМ (в течение 24-х часов)?", "Нет");
        input("Причина задержки", "ТестСозданиеУВМПричинаЗадержки");

        /*legend="План ликвидации утраты ВМ";
        select("Ответственный", 3);
        date("Рекомендуемая дата завершения плана","15.02.2016");*/

        legend="Объекты, на которых произошла утрата ВМ";
        select("Объект", 2);
        select("Техническое устройство", 0);

        legend="Ликвидирующие организации";
        //button("Добавить");
        input("Наименование организации", "ТестСозданиеУВМЛиквидирующаяОрганизация");

        legend="Кто сообщил об утрате ВМ";
        select("Сотрудник", 0);

        legend="Данные лица, принявшего сообщение об утрате ВМ";
        input("Ф.И.О.", "ТестСозданиеУВМФИО");
        input("Должность","ТестСозданиеУВМДолжность");
        date("Дата", "01.01.2015");
        input("Время (МСК)", "1100");

        save();
        messageResultOfOperation("УВМ");

        legend="";
        button("Перейти на страницу утраты ВМ");

        goTo("Инциденты","Утрата ВМ");
        selectRow(0);
        assertEquals(revisionValue("Место утраты ВМ"), data,"Утрата ВМ не добавлена");
    }

    @Test(priority=30, groups = { "add","empty" })
    public void testAddResponsibleEmployee() throws Exception
    {
        operation="добавление";
        selectRow(0);
        edit();
        goTo("Ответственные за нарушения");

        legend="Заключение о лицах, ответственных за допущенные нарушения требований промышленной безопасности";
        button("Добавить ответственного");
        select("Сотрудник", 0);

        legend="Нормативные документы, требования которых были нарушены";
        button("Добавить");
        select("Нормативный документ", 2);
        input("Номер статьи документа", data = "19");
        input("Текст статьи документа", data1 = "ТестСозданиеОтветственныхУтратыВМТекстСтатьи" + curDate());

        save();
        messageResultOfOperation("Ответственные за нарушения утраты ВМ");

        legend="";
        button("Перейти на страницу утраты ВМ");

        //      legend="Дополнительные данные";
        //       goTo("Инциденты", "Несчастные случаи");
        //       selectRow(0);
        //       goTo("Лица, ответственные за допущенные нарушения требований промышленной безопасности");
//        assertEquals(revisionValue("№ пункта: " + data),  data1,"Данные об ответственных за НС не добавлены"); // из-за кривой верстки не получается достать значение - проверить сложно
    }

    @Test(priority=300, groups = { "delete" })
    public void testDelete() throws Exception
    {
        operation="удаление";
        selectRow(0);//выбрать второй элемент для проверки
        legend="Оперативное сообщение";
        data = revisionValue("Место утраты ВМ (производство, участок, цех)");//запоминаем данные второго - он должен стать первым
        delete();

        messageResultOfOperation("УВМ");

        goTo("Инциденты","Утрата ВМ");
        if (!MOWebdriver.isListEmpty()) {
            selectRow(0);
            assertNotEquals(revisionValue("Место утраты ВМ (производство, участок, цех)"), data, "УВМ не удалена");
        }
    }
}
