package myobject;

import Base.MOTestBase;
import Base.MOWebdriver;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import static Base.MOWebdriver.*;

import java.util.Arrays;

import static org.testng.Assert.assertEquals;
import static org.testng.Assert.assertNotEquals;
import static org.testng.Assert.assertTrue;

/**
 * Created by natalia on 02.04.15.
 */
public class Object extends MOTestBase {
    @BeforeMethod
    private void goToList() throws Exception{
        goTo("Эксплуатация","Объекты");
    }

    @Test(priority=1, groups = { "add","addObject" })
    public void testAdd() throws Exception
    {
        operation="добавление";
        add();

        legend="Общая информация";
        input("Уточненное наименование объекта", data = "ТестСозданиеОбъектаНаименование" + curDate());
        select("Класс опасности объекта", "II класс: ОПО высокой опасности");
        select("Ответственный", 0);
        input("Код объекта", "ТестСозданиеОбъектаКодОбъекта");
        input("Площадь объекта в условных границах", "100");
        input("Численность персонала", "50");
        input("Год ввода в эксплуатацию","1998");
        input("Описание объекта","ТестСозданиеОбъектаОписание");
        switcher("Наличие договора страхования риска ответственности за причинение вреда при эксплуатации объекта", "Да");

        legend="Адрес объекта";
        input("Почтовый индекс", "654321");
        input("Код ОКАТО","98732165401");
        input("Местонахождение (адрес)","ТестСозданиеОбъектаУлица","ТестСозданиеОбъектаДом","ТестСозданиеОбъектаКвартира");
        input("КЛАДР","2596348165");

        legend="Статус объекта";
        select("Статус", "Действующий");
        input("Комментарий","ТестСозданиеОбъектаСтатусКомментарий");

        legend="Сведения об аренде";
        button("Добавить");
        input("Полное наименование арендодателя","ТестСозданиеОбъектаПолноеНаименованиеАрендодателя");
        input("Код ОГРН","6842359134867");
        input("ИНН","3671268453");
        date("Период аренды с:", "01.01.2000");
        date("Период аренды по:","01.01.2020");

        legend="Данные ОПО";
        input("Регистрационный номер","A12-34567-8901");
        date("Дата регистрации","01.1.1998");
        tree("Типовое наименование ОПО","1. Опасные производственные объекты угольной, сланцевой и торфяной промышленности");
        tree("Типовое наименование ОПО","Шахта угольная");

        legend="Признаки опасности объекта";
        check("2.1 - Получение, использование, переработка, образование, хранение, транспортирование, уничтожение опасных веществ");
        check("4.2 - Газораспределительная станция, сеть газораспределения, сеть газопотребления");

        legend="Виды деятельности, на осуществление которых требуются лицензии";
        check("5.2 - Деятельность, связанная с обращением взрывчатых материалов промышленного назначения");

        save();
        messageResultOfOperation("объект");

        goTo("Эксплуатация","Объекты");
        selectRow(0);
        legend="Общая информация";
        assertEquals(revisionValue("Наименование"), data,"Объект не добавлен");
    }

    @Test(priority=2, groups = { "empty","add" })
    public void testAddEmpty() throws Exception
    {
        expected_result=false;
        add();

        legend="Общая информация";
        input("Уточненное наименование объекта","");
        select("Класс опасности объекта", "I класс: ОПО чрезвычайно высокой опасности");
        input("Численность персонала","");

        legend="Адрес объекта";
        input("Почтовый индекс","");
        input("Код ОКАТО", "");
        input("Местонахождение (адрес)","","","");

        legend="Сведения об аренде";
        button("Добавить");
        input("Полное наименование арендодателя","");
        input("Код ОГРН","");
        input("ИНН", "");
        input("Период аренды с:", "");
        input("Период аренды по:","");

        legend="Данные ОПО";

        tree("Типовое наименование ОПО", "");

        legend="Признаки опасности объекта";
        uncheck("2.1 - Получение, использование, переработка, образование, хранение, транспортирование, уничтожение опасных веществ");

        save();
        messageResultOfOperation("объект");

        String[] s=checkEmptyFields();
        assertTrue(s.length == 0, "Есть обязательные поля, не подсвеченные как обязательные:\n" + Arrays.asList(s) + "\n" + (s.length == 0 ? "" : getScreenshot("fail")));
    }

    @Test(priority=200, groups = { "edit" })
    public void testEdit() throws Exception
    {
        operation="изменение";
        selectRow(0);
        edit();

        legend="Общая информация";
        input("Уточненное наименование объекта", data = "ТестИзменениеОбъектаНаименование" + curDate());
        select("Класс опасности объекта", "IV класс: ОПО низкой опасности");
        select("Ответственный", 0);
        input("Код объекта","ТестИзменениеОбъектаКодОбъекта");
        input("Площадь объекта в условных границах", "150");
        input("Численность персонала", "70");
        input("Год ввода в эксплуатацию","1999");
        input("Описание объекта", "ТестИзменениеОбъектаОписание");
        switcher("Наличие договора страхования риска ответственности за причинение вреда при эксплуатации объекта", "Да");

        legend="Адрес объекта";
        input("Почтовый индекс","654123");
        input("Код ОКАТО", "98712365401");
        input("Местонахождение (адрес)","ТестИзменениеОбъектаУлица","ТестИзменениеОбъектаДом","ТестИзменениеОбъектаКвартира");
        input("КЛАДР","2591238165");

        legend="Статус объекта";
        select("Статус", "Сдан в аренду");
        input("Комментарий", "ТестИзменениеОбъектаСтатусКомментарий");

        legend="Сведения об аренде";
        button("Добавить");
        input("Полное наименование арендодателя","ТестИзменениеОбъектаПолноеНаименованиеАрендодателя");
        input("Код ОГРН","6842359123867");
        input("ИНН", "3671123453");
        date("Период аренды с:", "01.02.2001");
        date("Период аренды по:", "01.02.2021");

        legend="Данные ОПО";
        input("Регистрационный номер", "A12-35427-8901");
        date("Дата регистрации", "01.01.1999");
        tree("Типовое наименование ОПО","2. Опасные производственные объекты горнорудной и нерудной промышленности");
        tree("Типовое наименование ОПО", "2.1. Опасные производственные объекты добычи и обогащения цветных металлов и золота");
        tree("Типовое наименование ОПО", "Рудник");

        legend="Признаки опасности объекта";
        uncheck("2.1 - Получение, использование, переработка, образование, хранение, транспортирование, уничтожение опасных веществ");
        check("2.4 - Получаются, транспортируются, используются расплавы черных и цветных металлов, сплавы на основе этих расплавов с применением оборудования, рассчитанного на максимальное количество расплава 500 килограммов и более");

        legend="Виды деятельности, на осуществление которых требуются лицензии";
        uncheck("5.2 - Деятельность, связанная с обращением взрывчатых материалов промышленного назначения");
        check("Эксплуатация химически опасных производственных объектов");

        save();
        messageResultOfOperation("объект");

        goTo("Эксплуатация","Объекты");
        selectRow(0);
        legend="Общая информация";
        assertEquals(revisionValue("Наименование"), data, "Объект не изменен");
    }
    @Test(priority=201, groups = { "empty","edit" })
    public void testEditEmpty() throws Exception
    {
        expected_result=false;
        selectRow(0);
        edit();

        legend="Общая информация";
        input("Уточненное наименование объекта","");
        select("Класс опасности объекта", "I класс: ОПО чрезвычайно высокой опасности");
        input("Численность персонала","");

        legend="Адрес объекта";
        input("Почтовый индекс","");
        input("Код ОКАТО", "");
        input("Местонахождение (адрес)","","","");

        legend="Сведения об аренде";
        button("Добавить");
        input("Полное наименование арендодателя","");
        input("Код ОГРН","");
        input("ИНН", "");
        input("Период аренды с:", "");
        input("Период аренды по:","");

        legend="Данные ОПО";

        tree("Типовое наименование ОПО", "");

        legend="Признаки опасности объекта";
        uncheck("2.1 - Получение, использование, переработка, образование, хранение, транспортирование, уничтожение опасных веществ");

        save();
        messageResultOfOperation("объект");

        String[] s = checkEmptyFields();
        assertTrue(s.length == 0, "Есть обязательные поля, не подсвеченные как обязательные:\n" + Arrays.asList(s) + "\n" + (s.length == 0 ? "" : getScreenshot("fail")));
    }

    @Test(priority=300, groups = { "delete" })
    public void testDelete() throws Exception
    {
        operation="удаление";
        selectRow(0);
        legend = "Общая информация";
        data = revisionValue("Наименование");
        delete();

        //messageResultOfOperation("объект");

        goTo("Эксплуатация", "Объект");
        if(!MOWebdriver.isListEmpty()) {
            selectRow(0);
            assertNotEquals(revisionValue("Наименование"), data, "Объект не удален!");
        }
    }
}
